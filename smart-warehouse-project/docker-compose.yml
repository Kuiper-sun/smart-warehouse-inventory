version: '3.8'

services:
  # 1. Next.js Frontend Service
  frontend:
    build:
      context: ./nextjs-frontend
    container_name: nextjs_frontend
    ports:
      - "3000:3000"
    environment:
      # This tells Next.js where to find the API from within the Docker network
      - NEXT_PUBLIC_API_URL=http://webserver/api
    depends_on:
      - backend
    networks:
      - app-network

  # 2. Laravel Backend Service (PHP-FPM)
  backend:
    build:
      context: ./laravel-backend
      dockerfile: Dockerfile
    container_name: laravel_backend
    volumes:
      - ./laravel-backend:/var/www
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=warehouse
      - DB_USERNAME=postgres
      - DB_PASSWORD=kief88
      - FLASK_SCANNER_URL=http://scanner:5001/rfid-scan
    depends_on:
      - db
      - scanner
    networks:
      - app-network

  # 3. Nginx Webserver for Laravel
  webserver:
    image: nginx:alpine
    container_name: nginx_webserver
    ports:
      - "8000:80"
    volumes:
      - ./laravel-backend:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  # 4. Flask Scanner Microservice
  scanner:
    build: ./flask-scanner-service
    container_name: flask_scanner
    ports:
      - "5001:5001"
    environment:
      - DB_HOST=db
      - DB_DATABASE=warehouse
      - DB_USERNAME=postgres
      - DB_PASSWORD=kief88
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  # 5. PostgreSQL Database Service
  db:
    image: postgres:14
    container_name: postgres_db
    environment:
      - POSTGRES_DB=warehouse
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=kief88
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d warehouse"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # 6. Metabase Service
  metabase:
    image: metabase/metabase:latest
    container_name: metabase_service
    ports:
      - "3030:3000" # Mapped to 3030 to avoid conflict with Next.js
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=warehouse
      - MB_DB_PORT=5432
      - MB_DB_USER=postgres
      - MB_DB_PASS=kief88
      - MB_DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
